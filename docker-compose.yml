services:
  profile_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "transaction_service"
    environment:
      PROFILE_SERVICE_CONFIG_PATH: "./components/transaction_service/configs/app.docker.toml"
      LOG_LEVEL: "INFO"
      LOG_FORMAT: "TEXT"
    command: uv run uvicorn components.transaction_service.main:app --port 8000 --host 0.0.0.0
    ports:
      - "127.0.0.1:8000:8000"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgis/postgis:15-3.5-alpine
    container_name: "transaction-db"
    env_file:
      - configs/db.env
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always


  prometheus:
    image: prom/prometheus:latest
    container_name: "transaction-prometheus"
    ports:
      - "127.0.0.1:9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.listen-address=:9090'
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: "transaction-grafana"
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    depends_on:
      - prometheus
    restart: unless-stopped
volumes:
  postgres_data:
